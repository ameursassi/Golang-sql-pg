basePath: /
definitions:
  models.Drivers:
    properties:
      action_type:
        type: integer
      car_type:
        type: string
      commission_percentage:
        type: number
      designation:
        type: string
      driver_id:
        type: integer
      driver_name:
        type: string
      driver_phone:
        type: string
      driver_status:
        type: string
      last_trace:
        type: string
      last_trace_date:
        type: string
      last_trace_lat:
        type: number
      last_trace_long:
        type: number
      marker_map:
        type: string
      note:
        type: integer
      office_radius:
        type: integer
      priority:
        type: integer
      saas_office_id:
        type: integer
    type: object
  models.RequestD:
    properties:
      address_drop_off:
        type: string
      address_drop_off_postal_code:
        type: string
      address_pick_up:
        type: string
      address_pick_up_postal_code:
        type: string
      driver_name:
        type: string
      drop_off_time_margin:
        type: string
      drop_off_time_window_end:
        type: string
      estimate_drop_off_date:
        type: string
      estimate_pick_up_date:
        type: string
      id:
        description: gorm.Model
        type: integer
      package_types:
        type: string
      partner_id:
        type: string
      pick_up_time_margin:
        type: string
      recipient:
        type: string
      recipient_phone_number:
        type: string
      reservation_code:
        type: string
      saas_company_id:
        type: integer
      saas_office_id:
        type: integer
      sender_phone_number:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  models.RequestP:
    properties:
      address_drop_off:
        type: string
      address_drop_off_lat:
        type: number
      address_drop_off_long:
        type: number
      address_drop_off_postal_code:
        type: string
      address_pick_up:
        type: string
      address_pick_up_lat:
        type: number
      address_pick_up_long:
        type: number
      address_pick_up_postal_code:
        type: string
      company:
        type: string
      driver_id:
        type: string
      driver_name:
        type: string
      driver_phone:
        type: string
      estimate_distance_m:
        type: integer
      estimate_drop_off_date:
        type: string
      estimate_pick_up_date:
        type: string
      fire_time:
        type: string
      flight_number:
        type: string
      id:
        description: |-
          gorm.Model
          tableName                struct{} `pg:"requests"`
        type: integer
      passenger_full_name:
        type: string
      passenger_phone_number:
        type: string
      reservation_code:
        type: string
      ride_date:
        type: string
      saas_company_id:
        type: integer
      saas_office_id:
        type: integer
      state:
        type: string
      type:
        type: string
    type: object
  models.SaasOffices:
    properties:
      allow_delivery:
        type: boolean
      distance_unit:
        type: string
      id:
        type: integer
      name:
        type: string
      office_center_lat:
        type: number
      office_center_long:
        type: number
      office_radius:
        type: integer
      saas_company_id:
        type: integer
    type: object
  models.Trajectory:
    properties:
      address_drop_off_lat:
        type: number
      address_drop_off_long:
        type: number
      address_pick_up_lat:
        type: number
      address_pick_up_long:
        type: number
      id:
        type: integer
    type: object
host: localhost/8080
info:
  contact:
    email: soberkoder@swagger.io
    name: API Support
  description: This is a sample service for managing orders
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: bookings API
  version: "1.0"
paths:
  /bookings/{saas_office_id}:
    get:
      consumes:
      - application/json
      description: Get details of passenger corresponding to the input passengerId
      parameters:
      - description: ID of the passengers
        in: path
        name: saas_office_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RequestP'
      summary: Get details for a given passengerId
      tags:
      - bookings
  /deliveries/{saas_office_id}:
    get:
      consumes:
      - application/json
      description: Get details of deliveries corresponding to the input deliveriesId
      parameters:
      - description: ID of the deliveries
        in: path
        name: saas_office_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RequestD'
      summary: Get details for a given deliveriesId
      tags:
      - deliveries
  /drivers/{saas_office_id}:
    get:
      consumes:
      - application/json
      description: Get details of driver corresponding to the input driverId
      parameters:
      - description: ID of the drivers
        in: path
        name: saas_office_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Drivers'
      summary: Get details for a given driverId
      tags:
      - drivers
  /offices:
    get:
      consumes:
      - application/json
      description: Get details of list offices
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SaasOffices'
      summary: Get offices for a given offices list
      tags:
      - offices
  /offices/{saas_office_id}:
    get:
      consumes:
      - application/json
      description: Get details of office corresponding to the input officeId
      parameters:
      - description: ID of the offices
        in: path
        name: saas_office_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SaasOffices'
      summary: Get details for a given officeId
      tags:
      - offices
  /trajectory/{id}:
    get:
      consumes:
      - application/json
      description: Get details of trajectory corresponding to the input trajectoryId
      parameters:
      - description: ID of the trajectory
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Trajectory'
      summary: Get details for a given trajectoryId
      tags:
      - trajectory
swagger: "2.0"
